{"ast":null,"code":"import JArticle from '../classes/JArticle';\n\nvar JArticleApi =\n/** @class */\nfunction () {\n  function JArticleApi(jApi) {\n    JArticleApi.jApi = jApi;\n  }\n  /**\n   * get\n   *\n   * @param idArticle\n   */\n\n\n  JArticleApi.prototype.get = function (idArticle) {\n    return new Promise(function (resolve, reject) {\n      JArticleApi.jApi.fetch({\n        body: JSON.stringify({\n          o: 'article',\n          f: 'get',\n          idArticle: idArticle\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (response) {\n        if (response.error === 1) {\n          var jArticle = new JArticle(response.result.id, response.result.type);\n          jArticle.hydrate(response.result);\n          resolve(jArticle);\n        } else {\n          reject(response.messages);\n        }\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  /**\n   * getPublic article\n   */\n\n\n  JArticleApi.prototype.getPublic = function (idArticle) {\n    return new Promise(function (resolve, reject) {\n      JArticleApi.jApi.fetch({\n        body: JSON.stringify({\n          o: 'article',\n          f: 'getPublic',\n          idArticle: idArticle\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (response) {\n        if (response.error === 0) {\n          resolve(response);\n        } else {\n          reject('NO public Article');\n        }\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  /**\n   * getComments\n   * @param limits: limits\n   */\n\n\n  JArticleApi.prototype.getComments = function (limits) {\n    return new Promise(function (resolve, reject) {\n      JArticleApi.jApi.fetch({\n        body: JSON.stringify({\n          o: 'article',\n          f: 'getComments',\n          limits: limits\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (response) {\n        if (response.error === 0) {\n          resolve(response);\n        } else {\n          reject('No comments');\n        }\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  /**\n   * get-members\n   * @param uri : uri\n   */\n\n\n  JArticleApi.prototype.getMembers = function (uri) {\n    return new Promise(function (resolve, reject) {\n      JArticleApi.jApi.fetch({\n        body: JSON.stringify({\n          o: 'article',\n          f: 'get-members',\n          uri: uri\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (response) {\n        if (response.error === 0) {\n          resolve(response);\n        } else {\n          reject('No membres');\n        }\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  /**\n   * getAttachments\n   * @param token : token\n   */\n\n\n  JArticleApi.prototype.getAttachments = function (token) {\n    return new Promise(function (resolve, reject) {\n      JArticleApi.jApi.fetch({\n        body: JSON.stringify({\n          o: 'article',\n          f: 'getAttachments',\n          token: token\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (response) {\n        if (response.error === 0) {\n          resolve(response);\n        } else {\n          reject('No Attachements');\n        }\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n\n  return JArticleApi;\n}();\n\nexport default JArticleApi;","map":null,"metadata":{},"sourceType":"module"}