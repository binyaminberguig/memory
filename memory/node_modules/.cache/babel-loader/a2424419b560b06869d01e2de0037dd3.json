{"ast":null,"code":"import JGroup from '../classes/JGroup';\nimport JUser from '../classes/JUser';\n\nvar JGroupeApi =\n/** @class */\nfunction () {\n  function JGroupeApi(jApi) {\n    JGroupeApi.jApi = jApi;\n  }\n  /**\n   * get function returns a Promise of JGroup.\n   * @param idGroup <number>\n   * return JGroup\n   */\n\n\n  JGroupeApi.prototype.get = function (idGroup) {\n    return new Promise(function (resolve, reject) {\n      JGroupeApi.jApi.fetch({\n        body: JSON.stringify({\n          o: 'spot',\n          f: 'get',\n          idSpot: idGroup\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (response) {\n        if (response.error === 0) {\n          var jGroup = new JGroup(response.result.id, response.result.type);\n          jGroup.hydrate(response.result);\n          resolve(jGroup);\n        } else {\n          reject(response.messages);\n        }\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  /**\n   * articles function return a Promise\n   *\n   * @param idGroup <number>\n   * @param limit <number>\n   * @param p <number>\n   */\n\n\n  JGroupeApi.prototype.articles = function (idGroup, limit, p) {\n    if (limit === void 0) {\n      limit = 10;\n    }\n\n    if (p === void 0) {\n      p = 1;\n    }\n\n    return new Promise(function (resolve, reject) {\n      JGroupeApi.jApi.fetch({\n        body: JSON.stringify({\n          o: 'spot',\n          f: 'getArticles',\n          idSpot: idGroup,\n          limit: limit,\n          p: p\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (response) {\n        if (response.error === 0) {\n          resolve(response.result);\n        } else {\n          reject(response.messages);\n        }\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  /**\n   * members function return a Promise of JUser\n   *\n   * @param idGroup <number>\n   * @param limit <number>\n   * @param p <number>\n   */\n\n\n  JGroupeApi.prototype.members = function (idGroup, limit, p) {\n    if (limit === void 0) {\n      limit = 10;\n    }\n\n    if (p === void 0) {\n      p = 1;\n    }\n\n    return new Promise(function (resolve, reject) {\n      JGroupeApi.jApi.fetch({\n        body: JSON.stringify({\n          o: 'spot',\n          f: 'getMembers',\n          idSpot: idGroup,\n          limit: limit,\n          p: p\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (response) {\n        if (response.error === 0) {\n          var members_1 = [];\n\n          if (Array.isArray(response.result)) {\n            response.result.map(function (user) {\n              var jUser = new JUser(user.id, user.type);\n              jUser.hydrate(response.result);\n              members_1.push(jUser);\n            });\n          }\n\n          resolve(members_1);\n        } else {\n          reject(response.messages);\n        }\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  /**\n   * changeRole\n   *\n   * @param idUser <number>\n   * @param role <string>\n  */\n\n\n  JGroupeApi.prototype.changeRole = function (idUser, role) {\n    return new Promise(function (resolve, reject) {\n      JGroupeApi.jApi.fetch({\n        body: JSON.stringify({\n          o: 'spot',\n          f: 'changeRole',\n          idUser: idUser,\n          role: role\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (response) {\n        if (response.error === 0) {\n          resolve(response.result);\n        } else {\n          reject(response.messages);\n        }\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  /**\n   * get-types\n   */\n\n\n  JGroupeApi.prototype.getTypes = function () {\n    return new Promise(function (resolve, reject) {\n      JGroupeApi.jApi.fetch({\n        body: JSON.stringify({\n          o: 'spot',\n          f: 'get-types'\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (response) {\n        if (response.error === 0) {\n          resolve(response.result);\n        } else {\n          reject(response.messages);\n        }\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  /**\n   * lastVisited\n   * @param limit <number>\n   */\n\n\n  JGroupeApi.prototype.lastVisited = function (limit) {\n    if (limit === void 0) {\n      limit = 10;\n    }\n\n    return new Promise(function (resolve, reject) {\n      JGroupeApi.jApi.fetch({\n        body: JSON.stringify({\n          o: 'spot',\n          f: 'lastVisited',\n          limit: limit\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (response) {\n        if (response.error === 0) {\n          resolve(response);\n        } else {\n          reject('No lastVisited ');\n        }\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n\n  return JGroupeApi;\n}();\n\nexport default JGroupeApi;","map":null,"metadata":{},"sourceType":"module"}