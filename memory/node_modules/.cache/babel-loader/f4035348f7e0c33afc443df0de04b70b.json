{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\appli react\\\\memory\\\\src\\\\Card.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Card.css';\nconst HIDDEN_SYMBOL = '❓'; //fonction card on aura plus qu'a appeler <Card $a,$b,$c,$d/> \n\nconst Card = ({\n  card,\n  feedback,\n  index,\n  onClick\n}) => //comme pas de calcul alors pas de return\n//card represente le symbole, feedback si la carte est tourne ou pas, index represente la cle de la carte, \n//onclick est la methode pour retourne donc doit etre declare\nReact.createElement(\"div\", {\n  className: \"card \".concat(feedback),\n  onClick: () => onClick(index),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  className: \"symbol\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, feedback === 'hidden' ? HIDDEN_SYMBOL : card));\n\nCard.propTypes = {\n  card: PropTypes.string.isRequired,\n  feedback: PropTypes.oneOf(['hidden', 'justMatched', 'justMismatched', 'visible']).isRequired,\n  index: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired\n};\nexport default Card;","map":{"version":3,"sources":["C:\\Users\\Admin\\Documents\\appli react\\memory\\src\\Card.js"],"names":["React","PropTypes","HIDDEN_SYMBOL","Card","card","feedback","index","onClick","propTypes","string","isRequired","oneOf","number","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,YAAP;AAEA,MAAMC,aAAa,GAAG,GAAtB,C,CAEA;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,KAAlB;AAAyBC,EAAAA;AAAzB,CAAD,KACb;AACA;AACA;AACE;AAAK,EAAA,SAAS,iBAAUF,QAAV,CAAd;AAAoC,EAAA,OAAO,EAAE,MAAME,OAAO,CAACD,KAAD,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAM,EAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,QAAQ,KAAK,QAAb,GAAwBH,aAAxB,GAAwCE,IAD3C,CADF,CAJF;;AAWAD,IAAI,CAACK,SAAL,GAAiB;AACfJ,EAAAA,IAAI,EAAEH,SAAS,CAACQ,MAAV,CAAiBC,UADR;AAEfL,EAAAA,QAAQ,EAAEJ,SAAS,CAACU,KAAV,CAAgB,CACxB,QADwB,EAExB,aAFwB,EAGxB,gBAHwB,EAIxB,SAJwB,CAAhB,EAKPD,UAPY;AAQfJ,EAAAA,KAAK,EAAEL,SAAS,CAACW,MAAV,CAAiBF,UART;AASfH,EAAAA,OAAO,EAAEN,SAAS,CAACY,IAAV,CAAeH;AATT,CAAjB;AAYA,eAAeP,IAAf","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Card.css'\r\n\r\nconst HIDDEN_SYMBOL = '❓'\r\n\r\n//fonction card on aura plus qu'a appeler <Card $a,$b,$c,$d/> \r\nconst Card = ({ card, feedback, index, onClick }) => ( \r\n//comme pas de calcul alors pas de return\r\n//card represente le symbole, feedback si la carte est tourne ou pas, index represente la cle de la carte, \r\n//onclick est la methode pour retourne donc doit etre declare\r\n  <div className={`card ${feedback}`} onClick={() => onClick(index)}>\r\n    <span className=\"symbol\">\r\n      {feedback === 'hidden' ? HIDDEN_SYMBOL : card}\r\n    </span>\r\n  </div>\r\n)\r\n\r\nCard.propTypes = {\r\n  card: PropTypes.string.isRequired,\r\n  feedback: PropTypes.oneOf([\r\n    'hidden',\r\n    'justMatched',\r\n    'justMismatched',\r\n    'visible',\r\n  ]).isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Card"]},"metadata":{},"sourceType":"module"}